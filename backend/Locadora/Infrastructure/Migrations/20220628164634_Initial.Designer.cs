// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220628164634_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("VARCHAR(11)")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("DATETIME")
                        .HasColumnName("criado_em");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_nascimento");

                    b.Property<bool>("EhAtivo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nome");

                    b.Property<DateTime?>("UltimaAtualizacaoEm")
                        .HasColumnType("DATETIME")
                        .HasColumnName("ultima_atualizacao_em");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Cpf", "EhAtivo" }, "ix_cpf_ativo");

                    b.HasIndex(new[] { "Id", "EhAtivo" }, "ix_id_ativo");

                    b.HasIndex(new[] { "Nome", "EhAtivo" }, "ix_nome_ativo");

                    b.ToTable("clientes", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(true)
                        .HasColumnType("int");

                    b.Property<int>("Classificacao")
                        .HasColumnType("int")
                        .HasColumnName("classificacao");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("DATETIME")
                        .HasColumnName("criado_em");

                    b.Property<bool>("EhAtivo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ativo");

                    b.Property<bool>("EhLancamento")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("lancamento");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("titulo");

                    b.Property<DateTime?>("UltimaAtualizacaoEm")
                        .HasColumnType("DATETIME")
                        .HasColumnName("ultima_atualizacao_em");

                    b.HasKey("Id");

                    b.HasIndex("EhLancamento", "EhAtivo");

                    b.HasIndex("Id", "EhAtivo");

                    b.HasIndex("Titulo", "EhAtivo");

                    b.ToTable("filmes", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Locacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("DATETIME")
                        .HasColumnName("criado_em");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_devolucao");

                    b.Property<DateTime>("DataLocacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_locacao");

                    b.Property<DateTime>("DataPrazoDevolucao")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("EhAtivo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ativo");

                    b.Property<int>("FilmeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaAtualizacaoEm")
                        .HasColumnType("DATETIME")
                        .HasColumnName("ultima_atualizacao_em");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FilmeId");

                    b.HasIndex(new[] { "Id", "EhAtivo" }, "ix_id_ativo")
                        .HasDatabaseName("ix_id_ativo1");

                    b.ToTable("locacoes", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Locacao", b =>
                {
                    b.HasOne("Domain.Entities.Cliente", "Cliente")
                        .WithMany("Locacoes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Filme", "Filme")
                        .WithMany("Locacoes")
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Filme");
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Locacoes");
                });

            modelBuilder.Entity("Domain.Entities.Filme", b =>
                {
                    b.Navigation("Locacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
